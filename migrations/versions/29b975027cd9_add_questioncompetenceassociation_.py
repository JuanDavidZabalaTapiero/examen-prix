"""add: QuestionCompetenceAssociation. update: name of QuestionCompetence

Revision ID: 29b975027cd9
Revises: ec19def38ef4
Create Date: 2025-09-17 13:59:43.628863

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "29b975027cd9"
down_revision = "ec19def38ef4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question_competences",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "question_competence_association",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("question_competence_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["question_competence_id"],
            ["question_competences.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("question_category", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("name"))

    op.drop_table("question_category")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question_category",
        sa.Column(
            "id", mysql.INTEGER(display_width=11), autoincrement=True, nullable=False
        ),
        sa.Column("name", mysql.VARCHAR(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_general_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    with op.batch_alter_table("question_category", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("name"), ["name"], unique=True)

    op.drop_table("question_competence_association")
    op.drop_table("question_competences")
    # ### end Alembic commands ###
